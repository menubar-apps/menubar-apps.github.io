I"¥;<h1 id="fade-effect-on-a-widget">Fade effect on a widget</h1>

<p>Here is a nice fade-out / fade-in effect which can be applied on text/image widgets (or any other widget which supports opacity). It can be used either on click or on hover actions:</p>

<p><img src="/awesome-wm-widgets/assets/img/snippets/fade.gif" alt="fade" class="center-image" /></p>

<blockquote class="filename">
  <p>Fade effect on a widget</p>
</blockquote>
<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">local</span> <span class="n">fade_widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span> <span class="p">{</span>
    <span class="p">{</span>
        <span class="n">id</span> <span class="o">=</span> <span class="s1">'icon'</span><span class="p">,</span>
        <span class="n">image</span> <span class="o">=</span> <span class="s1">'/usr/share/icons/Yaru/24x24/apps/org.gnome.PowerStats.png'</span><span class="p">,</span>
        <span class="n">widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span><span class="p">.</span><span class="n">imagebox</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="n">id</span> <span class="o">=</span> <span class="s1">'text'</span><span class="p">,</span>
        <span class="n">text</span> <span class="o">=</span> <span class="s1">'Click to fade'</span><span class="p">,</span>
        <span class="n">widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span><span class="p">.</span><span class="n">textbox</span>
    <span class="p">},</span>
    <span class="n">spacing</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
    <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">layout</span><span class="p">.</span><span class="n">fixed</span><span class="p">.</span><span class="n">horizontal</span><span class="p">,</span>
    <span class="n">toggle_fade</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">is_fade</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'icon'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">set_opacity</span><span class="p">(</span><span class="n">is_fade</span> <span class="ow">and</span> <span class="mi">0</span><span class="p">.</span><span class="mi">2</span> <span class="ow">or</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'icon'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s1">'widget::redraw_needed'</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'text'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">set_opacity</span><span class="p">(</span><span class="n">is_fade</span> <span class="ow">and</span> <span class="mi">0</span><span class="p">.</span><span class="mi">2</span> <span class="ow">or</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'text'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s1">'widget::redraw_needed'</span><span class="p">)</span>
    <span class="k">end</span>
<span class="p">}</span>

<span class="c1">-- on click</span>
<span class="kd">local</span> <span class="n">faded</span> <span class="o">=</span> <span class="kc">true</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">connect_signal</span><span class="p">(</span><span class="s1">'button::press'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="n">faded</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">faded</span>
    <span class="n">c</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="ow">not</span> <span class="n">faded</span><span class="p">)</span>
<span class="k">end</span><span class="p">)</span>

<span class="c1">-- on hover</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">connect_signal</span><span class="p">(</span><span class="s1">'mouse::enter'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span> <span class="k">end</span><span class="p">)</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">connect_signal</span><span class="p">(</span><span class="s1">'mouse::leave'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="k">end</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="how-it-works">How it works</h2>

<p>Letâ€™s start by creating a simple widget which has an icon and some text:</p>

<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">local</span> <span class="n">fade_widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span> <span class="p">{</span>
    <span class="p">{</span>
        <span class="n">image</span> <span class="o">=</span> <span class="s1">'/usr/share/icons/Yaru/24x24/apps/org.gnome.PowerStats.png'</span><span class="p">,</span>
        <span class="n">widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span><span class="p">.</span><span class="n">imagebox</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="n">text</span> <span class="o">=</span> <span class="s1">'Click to fade'</span><span class="p">,</span>
        <span class="n">widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span><span class="p">.</span><span class="n">textbox</span>
    <span class="p">},</span>
    <span class="n">spacing</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
    <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">layout</span><span class="p">.</span><span class="n">fixed</span><span class="p">.</span><span class="n">horizontal</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Fade effect can be achieved by lowering the opacity of the widget. Luckily both <a href="https://awesomewm.org/doc/api/classes/wibox.widget.textbox.html">textbox</a> and <a href="https://awesomewm.org/doc/api/classes/wibox.widget.imagebox.html">imagebox</a> have opacity property, which is set to 1 by default. The cleanest way to change widgetâ€™s property (or properties of nested widgets) is to add a function which will hide all the ugliness of accessing the nested widgets inside and expose a clean API outside:</p>

<figure class="highlight">
  <pre><code class="language-lua" data-lang="lua"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="kd">local</span> <span class="n">fade_widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span> <span class="p">{</span>
    <span class="p">{</span>
        <span class="n">id</span> <span class="o">=</span> <span class="s1">'icon'</span><span class="p">,</span>
        <span class="n">image</span> <span class="o">=</span> <span class="s1">'/usr/share/icons/Yaru/24x24/apps/org.gnome.PowerStats.png'</span><span class="p">,</span>
        <span class="n">widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span><span class="p">.</span><span class="n">imagebox</span>
    <span class="p">},</span>
    <span class="p">{</span>
        <span class="n">id</span> <span class="o">=</span> <span class="s1">'text'</span><span class="p">,</span>
        <span class="n">text</span> <span class="o">=</span> <span class="s1">'Click to fade'</span><span class="p">,</span>
        <span class="n">widget</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">widget</span><span class="p">.</span><span class="n">textbox</span>
    <span class="p">},</span>
    <span class="n">spacing</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span>
    <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox</span><span class="p">.</span><span class="n">layout</span><span class="p">.</span><span class="n">fixed</span><span class="p">.</span><span class="n">horizontal</span><span class="p">,</span>
    <span class="n">toggle_fade</span> <span class="o">=</span> <span class="k">function</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">is_fade</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'icon'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">set_opacity</span><span class="p">(</span><span class="n">is_fade</span> <span class="ow">and</span> <span class="mi">0</span><span class="p">.</span><span class="mi">2</span> <span class="ow">or</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'icon'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s1">'widget::redraw_needed'</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'text'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">set_opacity</span><span class="p">(</span><span class="n">is_fade</span> <span class="ow">and</span> <span class="mi">0</span><span class="p">.</span><span class="mi">2</span> <span class="ow">or</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">self</span><span class="p">:</span><span class="n">get_children_by_id</span><span class="p">(</span><span class="s1">'text'</span><span class="p">)[</span><span class="mi">1</span><span class="p">]:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s1">'widget::redraw_needed'</span><span class="p">)</span>
    <span class="k">end</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre>
</figure>

<p>Few things to note here:</p>

<ul>
  <li>Added widget identifiers (line 3, 8) so that we can access them later - line 15-18. We are using JavaScript-like syntax, described in section <em>Accessing widgets</em> of the <a href="https://awesomewm.org/apidoc/documentation/03-declarative-layout.md.html">documentation</a></li>
  <li>When changing text in textbox the widget is redrawn automatically (same for the image in imagebox), however when changing opacity the redraw is not triggered, this is why we call it explicitly - line 16, 18.</li>
</ul>

<p>Now we can easily trigger the fade effect on the widget by calling a <code class="language-plaintext highlighter-rouge">toggle_fade(true)</code> method. The only thing left is to add a mouse handler:</p>

<ul>
  <li>to toggle on mouse click</li>
</ul>

<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">local</span> <span class="n">faded</span> <span class="o">=</span> <span class="kc">true</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">connect_signal</span><span class="p">(</span><span class="s1">'button::press'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="n">faded</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">faded</span>
    <span class="n">c</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="ow">not</span> <span class="n">faded</span><span class="p">)</span>
<span class="k">end</span><span class="p">)</span>
</code></pre></div></div>
<ul>
  <li>to toggle on hover:</li>
</ul>

<div class="language-lua highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fade_widget</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">connect_signal</span><span class="p">(</span><span class="s1">'mouse::enter'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="n">c</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
<span class="k">end</span><span class="p">)</span>
<span class="n">fade_widget</span><span class="p">:</span><span class="n">connect_signal</span><span class="p">(</span><span class="s1">'mouse::leave'</span><span class="p">,</span> <span class="k">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
    <span class="n">c</span><span class="p">:</span><span class="n">toggle_fade</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span>
<span class="k">end</span><span class="p">)</span>
</code></pre></div></div>
:ET